g_with_sync = false sometimes has the clock output hanging LOW
==============================================================

The output of a clock can sometimes hang low _indefinitely_ after setting of the
clock values for a channel. I say "sometimes" as this does not seem to happen
for a determined frequency. This problem seems to stem from a timing mis-match
between the setting of a channel's registers and the old value at the output
(outp_*_d0).

It is worth pointing out that this problem only affects the module when
g_with_sync = false. With the synchronization FSM, the module works
appropriately.

[DONE] Two borrow bits in the SET_PER_COUNTER state
===================================================

[20-05-15] DONE, saves ~70 LUTs off the design. It is possible that better
optimization may be obtained.

The integer counter that gets subtracted from the previous value of the counter
when the FSM started to operate should keep into account whether carries occur
in the fractional counters on the next clock cycle. It needs to track two
carries and each of these carries yields a -1 decrease in the value of the
integer counter.

Currently, the way this decrementation based on the carries is done is in a very
rudimentary way, i.e., a MUX based on the values of the carries.

This should be changed (if possible) using two borrow bits based on the carries.

Wishbone regs
=============

Currently, the WB registers inside the wb_serdes_clk_gen module are implemented
in a file generated by wbgen2 (from CERN). If this should be deemed a problem in
the future, one may want to change it with say, Matthias' wbgenplus.
