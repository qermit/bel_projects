TITLE "div_by_n Frequency Divider Module"; 
-- Version 2.0, January 29, 1998
-- Copyright Rune Baeverrud, 1996-1998
-- You may use or distribute this function freely,
-- provided you do not remove this copyright notice.
-- If you have questions or comments, feel free to
-- contact me by email at r@acte.no 
-- World Wide WEB: http://www.acte.no/freecore

PARAMETERS
(
  DIVISOR = 2
);

CONSTANT NUM_BITS = CEIL(LOG2(DIVISOR));
CONSTANT DIVISOR_MINUS_ONE = DIVISOR - 1;

FUNCTION lpm_counter (data[LPM_WIDTH-1..0], clock, clk_en, cnt_en, updown, cin, aclr, aset, aconst, aload, sclr, sset, sconst, sload)
   WITH (LPM_WIDTH, LPM_DIRECTION, LPM_MODULUS, LPM_AVALUE, LPM_SVALUE, CARRY_CNT_EN, LABWIDE_SCLR)
   RETURNS (q[LPM_WIDTH-1..0], cout, eq[15..0]);

FUNCTION lpm_compare (dataa[LPM_WIDTH-1..0], datab[LPM_WIDTH-1..0], clock, aclr)
   WITH (LPM_WIDTH, LPM_REPRESENTATION, LPM_PIPELINE, CHAIN_SIZE, ONE_INPUT_IS_CONSTANT)
   RETURNS (alb, aeb, agb, ageb, aneb, aleb);


SUBDESIGN div_by_n
(
  SysClk           : INPUT;
  cnt_en           : INPUT = VCC;
  sclr             : INPUT = GND;
  Every_N          : OUTPUT;
  q[NUM_BITS-1..0] : OUTPUT;
)

VARIABLE
  counter          : LPM_COUNTER WITH (LPM_WIDTH = NUM_BITS);
  max_cnt          : NODE;
  Deglitch         : DFF;

BEGIN
  ASSERT (DIVISOR > 1)
	REPORT "Value of DIVISOR parameter (%) must be equal to or greater than 2"
      DIVISOR
	SEVERITY ERROR;

  ASSERT
    REPORT "div_by_n module will operate internally using % bits."
      NUM_BITS
    SEVERITY INFO;

  max_cnt = LPM_COMPARE(DIVISOR_MINUS_ONE, counter.q[],,)
            WITH (LPM_WIDTH = NUM_BITS,
                  ONE_INPUT_IS_CONSTANT = "YES")
            RETURNS (.aeb);
 
  counter.clock  = SysClk;
  counter.cnt_en = cnt_en;
  counter.sclr   = (max_cnt AND cnt_en) OR sclr;

  Deglitch     = max_cnt AND cnt_en;
  Deglitch.clk = SysClk;
  Every_n      = Deglitch;

  q[] = counter.q[];
END;



